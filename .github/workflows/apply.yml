name: Harness Apply

on:
  workflow_call:
    inputs:
      gh_environment:
        description: 'Specifies the GitHub deployment environment.'
        required: false
        type: string
        default: null

      workdir_path:
        description: 'Specifies the working directory.'
        required: false
        type: string
        default: null

    secrets:
        TF_VAR_HARNESS_ENDPOINT:
         description: 'HARNESS_ENDPOINT'
         required: true
        TF_VAR_HARNESS_ACCOUNT_ID:
          description: 'HARNESS_ACCOUNT_ID'
          required: true
        TF_VAR_HARNESS_PLATFORM_API_KEY:
          description: 'HARNESS_PLATFORM_API_KEY'
          required: true
        # AC_HARNESS_TF_MODULES_PVT_KEY:
        #   description: 'AC_HARNESS_TF_MODULES_PVT_KEY'
          #   required: true
        backendAzureRmResourceGroupName:
          description: 'HARNESS_PLATFORM_API_KEY'
          required: true
        backendAzureRmStorageAccountName:
          description: 'AC_HARNESS_TF_MODULES_PVT_KEY'
          required: true   
        backendAzureRmContainerName:
          description: 'HARNESS_PLATFORM_API_KEY'
          required: true
        backendAzureRmKey:
            description: 'AC_HARNESS_TF_MODULES_PVT_KEY'
            required: true   
        client_id:
            description: 'Client ID'
            required: true   
        tenant_id:
            description: 'Tenant ID'
            required: true    
        AZURE_CREDENTIALS: 
            description: 'Azure Credentials'
            required: true    
        
  workflow_dispatch:

jobs:
  terraform-apply:
    name: Terraform Apply
    # environment:
    #     name: ${{ inputs.gh_environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: "1.9.8"
        
      - name: Get list of changed directories
        id: get-changed-dirs
        run: |
          CHANGED_DIRS=$(git diff --dirstat=files,0 HEAD^ HEAD | awk '{print $2}')
          LAST_CHANGED_DIR=$(echo "$CHANGED_DIRS" | tail -n 1)
          echo "Latest changed directory: $LAST_CHANGED_DIR"
          echo "::set-output name=dir::$LAST_CHANGED_DIR"
        
      # - name: Copy private key to download remote repo files
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.PRIVATEKEYS }}" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa

      # - name: Configure aws credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-region: "${{ secrets.AWS_REGION }}"
      #     role-to-assume:  "${{ secrets.AWS_OIDC_ROLE_ARN_NONPROD }}" 
      #     role-session-name: Terraform-Deployment     
      
      # - uses: azure/login@v1
      #   with:
      #    client-id: ${{ secrets.client_id }}
      #    tenant-id: ${{ secrets.tenant_id }}
      #    # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #    allow-no-subscriptions: true

      # - uses: azure/login@v1
      #   with:
      #    client-id: 084f318f-40aa-4d40-93ea-5ed3472b66bc
      #    tenant-id: abec7981-3822-4685-98b0-533aca20c2ed
      #    # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #    allow-no-subscriptions: true
 
      - uses: azure/login@v1
        with: 
           creds: ${{ secrets.AZURE_CREDENTIALS }}
           
      - name: Terraform Apply Pipelines
        # working-directory: 'pipelines/ecs'
        working-directory: 'harness-resources'
        # working-directory: ${{ inputs.workdir_path }}
        run: |
          echo "TF_VAR_HARNESS_ENDPOINT=${{ secrets.TF_VAR_HARNESS_ENDPOINT }}" >> $GITHUB_ENV
          echo "TF_VAR_HARNESS_ACCOUNT_ID=${{ secrets.TF_VAR_HARNESS_ACCOUNT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_HARNESS_PLATFORM_API_KEY=${{ secrets.TF_VAR_HARNESS_PLATFORM_API_KEY }}" >> $GITHUB_ENV
          terraform init -backend-config="resource_group_name=Testvm_group" \
               -backend-config="storage_account_name=testvmgroupb7e2" \
               -backend-config="container_name=tfstate" \
               -backend-config="key=harness"
          terraform apply -auto-approve -var="TF_VAR_HARNESS_ENDPOINT=${{ secrets.TF_VAR_HARNESS_ENDPOINT }}" -var="TF_VAR_HARNESS_ACCOUNT_ID=${{ secrets.TF_VAR_HARNESS_ACCOUNT_ID }}" -var="TF_VAR_HARNESS_PLATFORM_API_KEY=${{ secrets.TF_VAR_HARNESS_PLATFORM_API_KEY }}"
